#version 460 core
layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;
layout(binding = 0) restrict writeonly uniform image3D ImgResult;
layout(binding = 0) uniform sampler3D samplerDownsample;
layout(location = 0) uniform int Lod;

void main()
{
    ivec3 imgCoord = ivec3(gl_GlobalInvocationID);
    
    // Base coordinate in source mip (each output voxel corresponds to 2x2x2 input voxels)
    vec3 baseUVW = (vec3(imgCoord * 2) + 0.5) / textureSize(samplerDownsample, Lod);
    vec3 texelSize = 1.0 / textureSize(samplerDownsample, Lod);
    
    vec4 result = vec4(0.0);
    float maxAlpha = 0.0;
    
    // Sample 2x2x2 block
    for(int z = 0; z < 2; z++)
    {
        for(int y = 0; y < 2; y++)
        {
            for(int x = 0; x < 2; x++)
            {
                vec3 offset = vec3(x, y, z) * texelSize;
                vec4 s = textureLod(samplerDownsample, baseUVW + offset, Lod);
                result.rgb += s.rgb;
                maxAlpha = max(maxAlpha, s.a);
            }
        }
    }
    result.rgb /= 8.0;
    result.a = maxAlpha;  // This seems to fix occlusion issuses?
    
    imageStore(ImgResult, imgCoord, result);
}
